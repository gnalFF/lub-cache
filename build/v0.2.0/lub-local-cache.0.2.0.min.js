/**
 * AngularJS Local Cache Module
 * @version v0.2.0 - 2013-02-10
 * @link https://github.com/gnalFF/lub-local-cache
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
angular.module("lub-storage",[]).factory("lubStorageRandomHelper",function(){return function(e,t){return Math.floor(Math.random()*(t-e+1))+e}}).factory("lubStorageKeysHelper",function(){return function(e){if(Object.keys)return Object.keys(e);var t=[];for(var n in initialData)Object.prototype.hasOwnProperty.call(initialData,n)&&t.push(n);return t}}).factory("lubStorageFailover",function(e,t){return function(n){var r=e(n),i=r.length===0?0:1;r.length>=10&&(i=r.length/10);for(var s=0;s<i;s++){var o=t(0,r.length-1);delete n[r[o]],r.splice(o,1)}return n}}).factory("lubStorage",function(e,t,n){var r={},i=function(e,t){var n=e.getItem(t);return n?JSON.parse(n):undefined},s=function(e,t,n,r){try{e.setItem(t,JSON.stringify(n))}catch(i){var o=r(n);s(e,t,o,r)}},o=function(e,t){e.removeItem(t)};return function(u,a){var f=angular.extend({storage:"localStorage",ttl:0,failOver:t},a),l={},c=0,h=e[f.storage];if(r[u])throw{name:"CacheExists"};var p=i(h,u);return p&&(c=n(p).length,l=p),r[u]={setItem:function(e,t,n){this.data[e]=this.$toCacheObject(t,n),this.length=this.length+1,s(h,u,this.data,f.failOver)},getItem:function(e){return this.$cacheObject(e).data},removeItem:function(e){if(this.length===0)return;delete this.data[e],this.length=this.length-1,s(h,u,this.data,f.failOver)},clear:function(){this.data={},this.length=0,o(h,u)},info:function(){return{name:u,ttl:f.ttl,length:this.length}},data:l,length:c,$cacheObject:function(e){var t={data:undefined},n=this.data[e]||t;return n.expires?this.$getTime()<=n.expires?n:(this.removeItem(e),t):n},$getTime:function(){return(new Date).getTime()},$toCacheObject:function(e,t){var n=angular.extend({ttl:0},f,t),r={data:e,created:this.$getTime()};return angular.isNumber(n.ttl)&&n.ttl>0&&(r.expires=r.created+n.ttl),r}}}}),angular.module("lub-cache",["lub-storage"]).factory("lubCache",function(e,t){return function(n,r){return{info:function(){return this.$cache.info()},put:function(e,t,n){this.$cache.setItem(e,t,n)},get:function(e){return this.$cache.getItem(e)},remove:function(e){this.$cache.removeItem(e)},removeAll:function(){this.$cache.clear()},destroy:function(){t.debug("will just invoke removeAll"),this.removeAll()},$cache:e(n,angular.extend({ttl:0,storage:"localStorage"},r))}}});